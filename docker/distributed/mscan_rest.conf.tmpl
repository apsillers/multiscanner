<VirtualHost *:{{ getenv "MS_API_PORT" "8080" }}>
    ServerName msrest

    {{ if eq (getenv "MS_USE_SSL") "true" }}
    LoadModule ssl_module modules/mod_ssl.so
    SSLEngine on
    SSLCertificateFile {{ getenv "restserver_cert_file" }}
    SSLCertificateKeyFile {{ getenv "restserver_key_file" }}
    {{end}}

    LoadModule wsgi_module {{ getenv "MOD_WSGI_LOCATION" }}
    WSGIDaemonProcess mscan_rest threads=5 python-path=/opt/multiscanner/utils
    WSGIScriptAlias / /opt/multiscanner/docker/distributed/mscan_rest.wsgi

    Header always set Access-Control-Max-Age "3600"
    Header always set Access-Control-Allow-Headers "X-Requested-With, Content-Type, Origin, Authorization, Accept, Client-Security-Token, Accept-Encoding"
    Header always set Access-Control-Allow-Methods "POST, GET, OPTIONS, DELETE, PUT"
    Header always set Access-Control-Expose-Headers "Etag"

    <Directory /opt/multiscanner>
        WSGIProcessGroup mscan_rest
        WSGIScriptReloading On
        WSGIApplicationGroup %{GLOBAL}
        Order deny,allow
        Allow from all
        AllowOverride All
        Require all granted

        RewriteEngine On
        RewriteCond %{REQUEST_METHOD} OPTIONS
        RewriteRule ^(.*)$ $1 [R=200,L,ENV=ISOPTIONS:true]
        SetEnvIf Origin "{{ getenv "MS_API_CORS_REGEX" }}" AccessControlAllowOrigin=$0
        # Set the access-control-origin-allow only on OPTIONS requests; api.py adds the header to everything that gets
        # past the OPTIONS step
        Header always set Access-Control-Allow-Origin %{AccessControlAllowOrigin}e  env=ISOPTIONS
    </Directory>
    ErrorLog /var/log/mscanrest/error.log
    LogLevel debug
    CustomLog /var/log/mscanrest/access.log combined
</VirtualHost>
