<VirtualHost *:8080>
    ServerName msrest

#{% if servers_use_ssl == True %}
#    LoadModule ssl_module {{ mod_ssl_system_module }}
#    SSLEngine on
#    SSLCertificateFile "{{ apache_cert_folder_root }}/{{ restserver_cert_file }}"
#    SSLCertificateKeyFile "{{ apache_cert_folder_root }}/private/{{ restserver_cert_key_file }}"
#{% endif %}

    LoadModule wsgi_module {{ mod_wsgi_system_module }}
    WSGIDaemonProcess mscan_rest threads=5 python-path=/opt/multiscanner/utils
    WSGIScriptAlias / /opt/multiscanner/docker/distributed/mscan_rest.wsgi

    Header always set Access-Control-Max-Age "3600"
    Header always set Access-Control-Allow-Headers "X-Requested-With, Content-Type, Origin, Authorization, Accept, Client-Security-Token, Accept-Encoding"
    Header always set Access-Control-Allow-Methods "POST, GET, OPTIONS, DELETE, PUT"
    Header always set Access-Control-Expose-Headers "Etag"

    <Directory /opt/multiscanner>
        WSGIProcessGroup mscan_rest
        WSGIScriptReloading On
        WSGIApplicationGroup %{GLOBAL}
        Order deny,allow
        Allow from all
        AllowOverride All
        Require all granted

        RewriteEngine On
        RewriteCond %{REQUEST_METHOD} OPTIONS
        RewriteRule ^(.*)$ $1 [R=200,L,ENV=ISOPTIONS:true]
        SetEnvIf Origin "{{ ms_api_cors_regex }}" AccessControlAllowOrigin=$0
        # Set the access-control-origin-allow only on OPTIONS requests; api.py adds the header to everything that gets
        # past the OPTIONS step
        Header always set Access-Control-Allow-Origin %{AccessControlAllowOrigin}e  env=ISOPTIONS
    </Directory>
    ErrorLog /var/log/mscanrest/error.log
    LogLevel debug
    CustomLog /var/log/mscanrest/access.log combined
</VirtualHost>
