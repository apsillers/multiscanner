version: '3.2'
networks:
  ms:
volumes:
  ms_volume:
  esdata:
  pgdata:
secrets:
  # to enable HTTPS on the Web API, set the next two `file:` lines and set the paths to your key and cert files
  msrest.crt:
    file: SET_THIS #./msrest.crt
  msrest.key:
    file: SET_THIS #./msrest.key
  # to enable HTTPS on the Web interface, set the next two `file:` lines and set the paths to your key and cert files
  msweb.crt:
    file: SET_THIS #./msweb.crt
  msweb.key:
    file: SET_THIS #./msweb.key
services:
  mselastic:
    image: "docker.elastic.co/elasticsearch/elasticsearch:5.6.11"
    ports:
     - "9200:9200"
     - "9300:9300"
    networks:
     - ms
    volumes:
     - esdata:/usr/share/elasticsearch/data
    environment:
     - "discovery.type=single-node"
     - "script.painless.regex.enabled=true"
     - "xpack.security.enabled=false"
     - "http.cors.enabled=true"
     - "http.cors.allow-origin=http://(msrest|msweb|ms_worker)"
  task_db:
    image: "postgres"
    ports:
     - "5432:5432"
    networks:
     - ms
    volumes:
     - pgdata:/var/lib/postgresql/data
    environment:
     - "POSTGRES_USER=multiscanner"
     - "POSTGRES_PASSWORD=CHANGEME"
     - "POSTGRES_DB=task_db"
  task_broker:
    build:
      context: .
      dockerfile: docker/distributed/Dockerfile_broker
      # If you are behind a proxy, you must uncomment
      # the next 3 lines
      #args:
      # - http_proxy
      # - https_proxy
    ports:
     - "15672:15672"
    networks:
     - ms
    environment:
     - "RABBITMQ_DEFAULT_USER=ms_rabbit"
     - "RABBITMQ_DEFAULT_PASS=CHANGE_THIS_PASSWORD"
  ms_worker:
    build:
      context: .
      dockerfile: docker/distributed/Dockerfile_worker
      # If you are behind a proxy, you must uncomment
      # the next 3 lines
      #args:
      # - http_proxy
      # - https_proxy
    networks:
     - ms
    volumes:
     - ms_volume:/mnt/samples
    depends_on:
     - task_broker
  msweb:
    secrets:
      - source: msweb.crt
        dest: msweb.crt
      - source: msweb.key
        dest: msweb.key
    build:
      context: .
      dockerfile: docker/distributed/Dockerfile_web
      # If you are behind a proxy, you must uncomment
      # the http_proxy and https_proxy lines
      args:
       - http_proxy
       - https_proxy
       - MS_WEB_METADATA_FIELDS=['Submitter Name', 'Submission Description', 'Submitter Email', 'Submitter Organization', 'Submitter Phone']
       - MS_WEB_TAGS="['Malware', 'Benign']"
       - MS_USE_SSL=false
       - MS_HTTP_PORT=80
       - MS_HTTPS_PORT=443
       - MS_API_LOC="https://msrest:8080"
       - webserver_cert_file=/run/secrets/msweb.crt
       - webserver_key_file=/run/secrets/msweb.key
    ports:
     - "80:80"
     - "443:443"
    networks:
     - ms
  msrest:
    secrets:
      - source: msrest.crt
        dest: msrest.crt
      - source: msrest.key
        dest: msrest.key
    build:
      context: .
      dockerfile: docker/distributed/Dockerfile_api
      # If you are behind a proxy, you must uncomment
      # the http_proxy and https_proxy lines
      args:
      # - http_proxy
      # - https_proxy
       - MS_API_CORS_REGEX=https?://(localhost|msweb)
       - MS_USE_SSL=false
       - MS_API_PORT=8080
       - MS_UPLOAD_DIR=/mnt/samples
       - restserver_cert_file=/run/secrets/msrest.crt
       - restserver_key_file=/run/secrets/msrest.key
       - mod_ssl_system_module=/usr/lib/apache2/modules/mod_ssl.so
    ports:
     - "8080:8080"
    networks:
     - ms
    volumes:
     - ms_volume:/mnt/samples
    depends_on:
     - mselastic
     - task_db
     - task_broker
     - ms_worker
    command: "httpd-foreground"
